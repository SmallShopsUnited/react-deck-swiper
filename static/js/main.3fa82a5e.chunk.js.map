{"version":3,"sources":["components/CardButtons.jsx","components/Card.jsx","styles.js","App.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","iconButtonContainerLeft","display","justifyContent","iconButtonContainerRight","CardButtons","right","left","classes","Grid","container","justify","className","item","xs","IconButton","onClick","aria-label","margin","color","fontSize","maxWidth","cardMedia","objectFit","objectPosition","userSelect","pointerEvents","Card","title","text","url","CardActionArea","CardMedia","component","height","image","CardContent","Typography","gutterBottom","variant","centerContent","flexDirection","alignItems","marginTop5","marginTop2","marginTop1","INITIAL_CARDS_STATE","id","App","React","lastSwipeDirection","setLastSwipeDirection","cards","setCards","classNames","role","length","renderButtons","onSwipe","swipeDirection","direction","RIGHT","LEFT","prev","slice","href","rel","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fa82a5e.chunk.js","sourcesContent":["import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(1),\n  },\n  iconButtonContainerLeft: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  iconButtonContainerRight: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default function CardButtons({\n  right,\n  left,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Grid container justify=\"space-between\" className={classes.root}>\n      <Grid item xs={6} className={classes.iconButtonContainerLeft}>\n        <IconButton\n          onClick={left}\n          aria-label=\"dislike\"\n          className={classes.margin}\n        >\n          <ThumbDownIcon color=\"secondary\" fontSize=\"large\" />\n        </IconButton>\n      </Grid>\n\n      <Grid item xs={6} className={classes.iconButtonContainerRight}>\n        <IconButton\n          onClick={right}\n          aria-label=\"like\"\n          className={classes.margin}\n        >\n          <ThumbUpIcon color=\"primary\" fontSize=\"large\" />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialCard from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  cardMedia: {\n    objectFit: 'cover',\n    objectPosition: 'top',\n    userSelect: 'none',\n    pointerEvents: 'none',\n  },\n});\n\nexport default function Card({\n  item: {\n    title,\n    text,\n    url,\n  },\n}) {\n  const classes = useStyles();\n\n  return (\n    <MaterialCard className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.cardMedia}\n          component=\"img\"\n          height=\"250\"\n          image={url}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"h3\">\n            {title}\n          </Typography>\n          <Typography gutterBottom variant=\"body1\" component=\"h3\">\n            {text}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </MaterialCard>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  centerContent: {\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  marginTop5: {\n    marginTop: theme.spacing(5),\n  },\n  marginTop2: {\n    marginTop: theme.spacing(2),\n  },\n  marginTop1: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import * as React from 'react';\nimport { Swipeable, direction } from 'react-deck-swiper';\nimport classNames from 'classnames';\n\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Grid from '@material-ui/core/Grid';\n\nimport CardButtons from './components/CardButtons';\nimport Card from './components/Card';\nimport useStyles from './styles';\n\nconst INITIAL_CARDS_STATE = [\n  {\n    id: 1,\n    title: 'This is react deck swiper',\n    text: 'It allows you to build tinder-like swipeable cards easily',\n    url: 'https://images.unsplash.com/photo-1496248051939-0382a018e59a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80',\n  },\n  {\n    id: 2,\n    title: 'and it\\'s awesome!',\n    text: 'So, what are you waiting for? üöÄ',\n    url: 'https://images.unsplash.com/photo-1533227268428-f9ed0900fb3b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80',\n  },\n];\n\nconst App = () => {\n  const classes = useStyles();\n\n  const [lastSwipeDirection, setLastSwipeDirection] = React.useState(null);\n  const [cards, setCards] = React.useState(INITIAL_CARDS_STATE);\n\n  const handleOnSwipe = (swipeDirection) => {\n    if (swipeDirection === direction.RIGHT) {\n      setLastSwipeDirection('your right');\n    }\n\n    if (swipeDirection === direction.LEFT) {\n      setLastSwipeDirection('your left');\n    }\n\n    setCards((prev) => prev.slice(1));\n  };\n\n  const renderButtons = ({\n    right,\n    left,\n  }) => (\n    <CardButtons\n      right={right}\n      left={left}\n    />\n  );\n\n  return (\n    <Grid container spacing={3} className={classes.centerContent}>\n      <Grid item xs={12} className={classNames(classes.marginTop5, classes.centerContent)}>\n        <Typography variant=\"h3\">\n          React Deck Swiper\n          <span role=\"img\" aria-label=\"awesome\"> ‚öõÔ∏è</span>\n        </Typography>\n      </Grid>\n\n      {\n        cards.length > 0 && (\n          <Grid item xs={12} className={classNames(classes.marginTop2, classes.centerContent)}>\n            {\n              lastSwipeDirection\n                ? (\n                  <Typography variant=\"body1\">\n                    {'Looks like you have just swiped to '}\n                    {lastSwipeDirection}\n                    ? üîÆ\n                  </Typography>\n                )\n                : (\n                  <Typography variant=\"body1\">\n                    Try swiping the card below!\n                  </Typography>\n                )\n            }\n          </Grid>\n        )\n      }\n\n      <Grid item xs={12} className={classNames(classes.marginTop2, classes.centerContent)}>\n        {\n          cards.length > 0\n            ? (\n              <Swipeable\n                renderButtons={renderButtons}\n                onSwipe={handleOnSwipe}\n              >\n                <Card item={cards[0]} />\n              </Swipeable>\n            )\n            : (\n              <Typography variant=\"body1\">\n                Looks like you have reached the end here =)\n              </Typography>\n            )\n        }\n      </Grid>\n\n      <Grid item xs={12} className={classNames(classes.marginTop2, classes.centerContent)}>\n        <Typography variant=\"body1\">\n          {'Made with '}\n          <span role=\"img\" aria-label=\"github\">‚ù§Ô∏è</span>\n          {'by '}\n          <a\n            href=\"https://github.com/pedro-lb\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Pedro Bini\n          </a>\n        </Typography>\n\n        <a\n          href=\"https://github.com/pedro-lb/react-deck-swiper\"\n          rel=\"noopener noreferrer\"\n          className={classes.marginTop1}\n          target=\"_blank\"\n        >\n          <IconButton\n            aria-label=\"github repo\"\n            className={classes.margin}\n          >\n            <GitHubIcon color=\"primary\" fontSize=\"large\" />\n          </IconButton>\n        </a>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}